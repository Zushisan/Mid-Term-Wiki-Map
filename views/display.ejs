<!DOCTYPE html>
<html lang="en">
  <head>
    <title>WIKI MAP</title>

    <link rel="stylesheet" href="/vendor/normalize-4.1.1.css" type="text/css" />
    <link rel="stylesheet" href="/vendor/border-box.css" type="text/css" />
    <link rel="stylesheet" href="/styles/layout.css" type="text/css" />

      <script type="text/javascript" src="/vendor/jquery-3.0.0.js"></script>
      <script type="text/javascript" src="/scripts/app.js"></script>

    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 50%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
     <% include ./partials/_header %>
  </head>

  <body>

      <section>
        <!-- <form method="GET" action="/maps"> -->
          <button class= "toronto">Best Restaurants in Toronto</button>
        <!-- </form> -->
      </section>


      <form>
        Title<br>
        <input type="text" name="title"><br>
        Last name:<br>
        <input type="text" name="Description">
        <input type="submit" value="Submit">
      </form>


       <div id="map">


       </div>
    <script>
      var markerObjectKey = <%-JSON.stringify(key[0])%>;
      console.log(markerObjectKey)

      var mapLat = <%= key[1][0].lat %>;
      var mapLng = <%= key[1][0].long %>;
      var mapID = <%= key[1][0].id %>;

      let markersInfo = {};

      var map;
      var locationToronto = {lat: mapLat, lng: mapLng};
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: locationToronto,
          zoom: 12,
          zoomControl: true,
          mapTypeControl: true,
          scaleControl: true,
          streetViewControl: true,
          rotateControl: true,
          fullscreenControl: true
        });


//To get the coordinates of the canter of the map location

         var lat = map.getCenter().lat();
         var lng = map.getCenter().lng();


         // console.log("Map:", lat, lng);


// This is the event hanlder to Creat the map. It will basically send the map details and the coordinates etc on the map

         // console.log("Map:", lat, lng, "Marker:", latMarker, lngMarker );


        $(() => {
          $(".newmap").on('submit', function (event){


              let mapObject = {lat, lng};
              let title = $(this).serialize();
              title = title.slice(10);

              $.ajax({
                method: "POST",
                url: `api/users/4/maps`,
                data: {title, mapObject, markersInfo}
              }).done((map) => {
                  console.log(map, " SUCCESS");
              });
              event.preventDefault();
            });

        });

// to get marker location and console log the lat and lng

        var icon = "http://maps.google.com/mapfiles/kml/pal2/icon32.png";

        google.maps.event.addListener(map, 'click', function(event) {


         placeMarker(event.latLng);

        });


        function placeMarker(location, title, description, attrID) {

          var dieRoll = Math.floor(Math.random() * 1000000) +1;



            var markerNew = new google.maps.Marker({
            position: location,
            animation: google.maps.Animation.DROP,
            map: map,
            icon: icon,
            id: dieRoll,
            attrID: attrID
             });

            var latMarkerNew = markerNew.getPosition().lat();
            var lngMarkerNew = markerNew.getPosition().lng();
            // console.log("Marker:", latMarkerNew, lngMarkerNew );


             var contentString =
            `<div class="whole-button" id="${markerNew.id}" data-attr-id="${attrID}">
                <img src="http://maps.google.com/mapfiles/kml/pal2/icon32.png">
                <p class="markerTitle"><b>Title:</b><span class="spanTitle">${title}</span></p>
                <div id="bodyContent">
                  <p><b>Description:</b><span class="spanDescription">${description}</span></b></p>
                </div>
                <button class="markerEdit"> Edit me </button>
            </div>`;
// `#${markerNew.id}`,
            $(() => {


            $('body').on('click', `#${markerNew.id} .markerEdit`, function(event) {


              // $(this).find('.markerConfirm').remove();
              console.log(markerNew.id);
              console.log($(this));

              let varParent  = $(this).parent();

              // let pointID = $(this).parents('div:first').attr('id');
              // let pointVar = $(`#${pointID}`);

              // let $wholeMarker = $(this).parent().parent();
              let titleValue = varParent.find(".spanTitle").text();

              let descriptionValue = varParent.find(".spanDescription").text();

              // var get = document.getElementById(pointID);

             varParent.find(".spanTitle").text('');

              varParent.find(".spanDescription").text('');

              varParent.find('.spanTitle').append(`<input type="text" class="inputValue" value="${titleValue}">`)
              varParent.find('.spanDescription').append(`<input type="text" class="inputValueDesc" value="${descriptionValue}">`)

              varParent.find('.markerEdit').remove();
              varParent.append(`<button class="markerConfirm"> Confirm </button>`);



              $('body').on('click',`#${markerNew.id} .markerConfirm`, function(event){

                let varConfirmParent  = $(this).parent();

                varConfirmParent.find('.markerConfirm').remove();

                // let $wholeConfirm = $(this).parent().parent();
                let newValue = varConfirmParent.find(".inputValue").val();
                let newValueDesc = varConfirmParent.find(".inputValueDesc").val();

                // console.log(newValue, newValueDesc);

                varConfirmParent.find('.inputValue').remove();
                varConfirmParent.find('.inputValueDesc').remove();
                varConfirmParent.find('.markerConfirm').remove();
                varConfirmParent.find('.spanTitle').append(newValue);
                varConfirmParent.find('.spanDescription').append(newValueDesc);
                varConfirmParent.parent().find('.whole-button').append(`<button class="markerEdit"> Edit me </button>`);
// >>>>>>> 15ff73e9889bca02637e56f56d2e4cd40f0af6e0
                let coordObject = {latMarkerNew, lngMarkerNew, newValue, newValueDesc}
                markersInfo[markerNew.id] = coordObject;
                console.log(markersInfo);

              });

            });

          });

            var infowindow = new google.maps.InfoWindow({
              content: contentString,
              maxWidth: 200
            });


            markerNew.addListener('click', function() {

              infowindow.open(map, markerNew);
            });

            //--NEW
            markerNew.addListener('dblclick', function() {
              //We need the MAP ID and the POINT ID

            if(markerNew.attrID){
            $(() => {
                $.ajax({
                  method: "DELETE",
                  url: `/maps/${mapID}/points/${markerNew.attrID}`,
                  data: {mapID, pointID: markerNew.attrID}
                }).done((res) => {

                  markerNew.setMap(null);
                  delete markersInfo[markerNew.id];

                  });
                });
              } else {
                markerNew.setMap(null);
                delete markersInfo[markerNew.id];

              }

              // console.log(markersInfo);
            });

            // let coordObject = {latMarkerNew, lngMarkerNew, newValue, newValueDesc}
            // markersInfo[markerNew.id] = coordObject;
            // console.log(markersInfo);
    }



      for(let i = 0; i < markerObjectKey.length; i++){

        var markerLat =  markerObjectKey[i].lat;
        var markerLong = markerObjectKey[i].long;
        var testTitle = markerObjectKey[i].title;
        var testDesc = markerObjectKey[i].description;
        var attrIDVar = markerObjectKey[i].id;


        placeMarker({lat: Number(markerLat), lng: Number(markerLong)}, testTitle, testDesc, attrIDVar)
      }



 }


    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBtXOaqqDPKHhH2X8Oog8vYdwmqrQn7Lpc&callback=initMap"
    async defer>

    </script>




  </body>
  <footer>

  </footer>
</html>
